{"version":3,"sources":["pages/HomePage.tsx","pages/PageNotFound.tsx","components/Loader/Loader.tsx","api.ts","store/PeopleConetxt.tsx","components/Person/Person.tsx","pages/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NavigationBar.tsx","App.tsx","Root.tsx","index.tsx"],"names":["HomePage","className","PageNotFound","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleContext","React","createContext","peopleList","errorMessage","isLoading","PeopleProvider","children","useState","setPeopleList","setErrorMessage","setIsLoading","pathname","useLocation","useEffect","people","peopleWithParents","map","person","mother","find","p","motherName","name","father","fatherName","value","Provider","Person","slug","useParams","cn","sex","to","born","died","PeopleTable","useContext","PeoplePage","length","getNavLinkClass","isActive","NavigationBar","role","App","Root","path","element","index","createRoot","document","getElementById","render"],"mappings":"6OAAaA,EAAW,WACtB,OACE,qBAAKC,UAAU,YAAf,SACE,oBAAIA,UAAU,QAAd,wBAGL,ECNYC,EAAe,WAC1B,OACE,qBAAKD,UAAU,YAAf,SACE,oBAAIA,UAAU,QAAd,6BAGL,E,gBCJYE,G,MAAS,kBACpB,qBAAKF,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,G,6BCOf,SAASG,IACd,OALYC,EAKA,IAJL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAKvBI,MAAK,kBAAMC,MARA,oEAQN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IAPlB,IAAcP,CAQb,CCFM,IAAMQ,EAAgBC,IAAMC,cAAiC,CAClEC,WAAY,GACZC,aAAc,GACdC,WAAW,IAOAC,EAAkC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChD,EAAoCC,mBAAuB,IAA3D,mBAAOL,EAAP,KAAmBM,EAAnB,KACA,EAAwCD,mBAAiB,IAAzD,mBAAOJ,EAAP,KAAqBM,EAArB,KACA,EAAkCF,oBAAkB,GAApD,mBAAOH,EAAP,KAAkBM,EAAlB,KACQC,EAAaC,cAAbD,SAERE,qBAAU,WACS,YAAbF,GACF,gCAAC,uGACCD,GAAa,GADd,kBAGwBpB,IAHxB,OAGSwB,EAHT,OAISC,EAAoBD,EAAOE,KAAI,SAAAC,GAAM,kCACtCA,GADsC,IAEzCC,OAAQJ,EACLK,MAAK,SAAAC,GAAC,OAAIH,EAAOI,aAAeD,EAAEE,IAA5B,KAAqC,KAC9CC,OAAQT,EACLK,MAAK,SAAAC,GAAC,OAAIH,EAAOO,aAAeJ,EAAEE,IAA5B,KAAqC,MALL,IAQ3Cd,EAAcO,GAZjB,gDAcGN,EAAgB,wBAdnB,yBAgBGC,GAAa,GAhBhB,2EAAD,EAoBH,GAAE,CAACC,IAEJ,IAAMc,EAAQ,CACZvB,aACAC,eACAC,aAGF,OACE,cAACL,EAAc2B,SAAf,CAAwBD,MAAOA,EAA/B,SACGnB,GAGN,E,iBCrDYqB,EAA0B,SAAC,GAAgB,IAAdV,EAAa,EAAbA,OAChCC,EAAmBD,EAAnBC,OAAQK,EAAWN,EAAXM,OACRK,EAASC,cAATD,KAER,OACE,qBACE,UAAQ,SACRzC,UAAW2C,IAAG,CACZ,yBAA0BF,IAASX,EAAOW,OAH9C,UAME,6BACE,cAAC,IAAD,CACEzC,UAAW2C,IAAG,CACZ,kBAAkC,MAAfb,EAAOc,MAE5BC,GAAE,kBAAaf,EAAOW,MAJxB,SAMGX,EAAOK,SAIZ,6BAAKL,EAAOc,MACZ,6BAAKd,EAAOgB,OACZ,6BAAKhB,EAAOiB,OACXhB,EACC,6BACE,cAAC,IAAD,CACE/B,UAAU,kBACV6C,GAAE,kBAAad,EAAOU,MAFxB,SAIGX,EAAOI,eAIZ,6BAAKJ,EAAOI,YAAc,MAG3BE,EACC,6BACE,cAAC,IAAD,CACES,GAAE,kBAAaT,EAAOK,MADxB,SAGGX,EAAOO,eAIZ,6BAAKP,EAAOO,YAAc,QAIjC,ECxDYW,EAAc,WACzB,IAAQjC,EAAekC,qBAAWrC,GAA1BG,WAER,OACE,wBACE,UAAQ,cACRf,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGe,EAAWc,KAAI,SAAAC,GAAM,OACpB,cAAC,EAAD,CAAQA,OAAQA,GAAaA,EAAOW,KADhB,QAM7B,ECxBYS,EAAa,WACxB,MAAgDD,qBAAWrC,GAAnDG,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,UAAWD,EAA/B,EAA+BA,aAE/B,OACE,sBAAKhB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UAEIiB,EACE,cAAC,EAAD,IACEF,EAAWoC,OAAS,EACtB,cAAC,EAAD,IAEA,mBAAG,UAAQ,kBAAX,+CAMHnC,GACC,mBAAG,UAAQ,qBAAqBhB,UAAU,kBAA1C,yCAQX,ECjCKoD,G,MAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAA0CV,IAChE,cAAe,CACb,8BAA+BU,GAFX,GAMXC,EAAgB,WAC3B,OACE,qBACE,UAAQ,MACRtD,UAAU,iCACVuD,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKvD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACE6C,GAAG,IACH7C,UAAWoD,EAFb,kBAOA,cAAC,IAAD,CACEP,GAAG,UACH7C,UAAWoD,EAFb,0BAUT,EChCYI,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAMxD,UAAU,UAAhB,SACE,cAAC,IAAD,QALa,ECQNyD,EAAO,WAClB,OACE,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUd,GAAG,QACzC,eAAC,IAAD,CAAOa,KAAK,SAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,SAE/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,cAMpC,ECxBDE,qBAAWC,SAASC,eAAe,SAChCC,OAAO,cAAC,EAAD,I","file":"static/js/main.8e1fcdd1.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  );\n};\n","export const PageNotFound = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Page not found</h1>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { PersonType } from './types/PersonType';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<PersonType[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { PersonType } from '../types';\nimport { getPeople } from '../api';\n\ntype PeopleContextType = {\n  peopleList: PersonType[];\n  errorMessage: string;\n  isLoading: boolean;\n};\n\nexport const PeopleContext = React.createContext<PeopleContextType>({\n  peopleList: [] as PersonType[],\n  errorMessage: '',\n  isLoading: false,\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const PeopleProvider: React.FC<Props> = ({ children }) => {\n  const [peopleList, setPeopleList] = useState<PersonType[]>([]);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    if (pathname === '/people') {\n      (async () => {\n        setIsLoading(true);\n        try {\n          const people = await getPeople();\n          const peopleWithParents = people.map(person => ({\n            ...person,\n            mother: people\n              .find(p => person.motherName === p.name) || null,\n            father: people\n              .find(p => person.fatherName === p.name) || null,\n          }));\n\n          setPeopleList(peopleWithParents);\n        } catch {\n          setErrorMessage('Something went wrong');\n        } finally {\n          setIsLoading(false);\n        }\n      })();\n    }\n  }, [pathname]);\n\n  const value = {\n    peopleList,\n    errorMessage,\n    isLoading,\n  };\n\n  return (\n    <PeopleContext.Provider value={value}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { PersonType } from '../../types';\n\ntype Props = {\n  person: PersonType;\n};\n\nexport const Person: React.FC<Props> = ({ person }) => {\n  const { mother, father } = person;\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': slug === person.slug,\n      })}\n    >\n      <td>\n        <Link\n          className={cn({\n            'has-text-danger': person.sex === 'f',\n          })}\n          to={`/people/${person.slug}`}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      {mother ? (\n        <td>\n          <Link\n            className=\"has-text-danger\"\n            to={`/people/${mother.slug}`}\n          >\n            {person.motherName}\n          </Link>\n        </td>\n      ) : (\n        <td>{person.motherName || '-'}</td>\n      )}\n\n      {father ? (\n        <td>\n          <Link\n            to={`/people/${father.slug}`}\n          >\n            {person.fatherName}\n          </Link>\n        </td>\n      ) : (\n        <td>{person.fatherName || '-'}</td>\n      )}\n    </tr>\n  );\n};\n","import { useContext } from 'react';\nimport { PeopleContext } from '../store/PeopleConetxt';\nimport { Person } from '../components/Person/Person';\n\nexport const PeopleTable = () => {\n  const { peopleList } = useContext(PeopleContext);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {peopleList.map(person => (\n          <Person person={person} key={person.slug} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable no-nested-ternary */\nimport { useContext } from 'react';\nimport { Loader } from '../components/Loader';\nimport { PeopleContext } from '../store/PeopleConetxt';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = () => {\n  const { peopleList, isLoading, errorMessage } = useContext(PeopleContext);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {\n            isLoading ? (\n              <Loader />\n            ) : peopleList.length > 0 ? (\n              <PeopleTable />\n            ) : (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )\n          }\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getNavLinkClass = ({ isActive } : { isActive: boolean }) => cn(\n  'navbar-item', {\n    'has-background-grey-lighter': isActive,\n  },\n);\n\nexport const NavigationBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getNavLinkClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={getNavLinkClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { NavigationBar } from './pages/NavigationBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavigationBar />\n\n    <main className=\"section\">\n      <Outlet />\n    </main>\n  </div>\n);\n","import {\n  Routes,\n  Route,\n  Navigate,\n  HashRouter as Router,\n} from 'react-router-dom';\nimport { HomePage } from './pages/HomePage';\nimport { PageNotFound } from './pages/PageNotFound';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { App } from './App';\nimport { PeopleProvider } from './store/PeopleConetxt';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <PeopleProvider>\n        <Routes>\n          <Route path=\"/\" element={<App />}>\n            <Route index element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" />} />\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"*\" element={<PageNotFound />} />\n          </Route>\n        </Routes>\n      </PeopleProvider>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}